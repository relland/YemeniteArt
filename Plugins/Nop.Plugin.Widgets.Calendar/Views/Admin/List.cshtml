@model NewOpenEventsListModel
@using Nop.Admin.Models.Events;
@using System.Globalization;
@{
    //var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSize;

    //page title
    ViewBag.Title = T("rel.openEventsList").Text;

    //var emptyDaysStart = "";
    //var emptyDaysEnd = "";
    //int j = 0;
    //int day = 1;
    //for (int i = 0; i < Model.DayOfWeek; i++)
    //{
    //    emptyDaysStart += "<td class=\"empty\"></td>";
    //    j++;
    //}
    //j = 7 - ((j + Model.NumOfDays) % 7);
    //for (int x = 0; x < j; x++)
    //{
    //    emptyDaysEnd += "<td class=\"empty\"></td>";
    //}
    var emptyDaysStart = "";
    var emptyDaysEnd = "";
    int j = 0;
    int day = 1;
    for (int i = 0; i < Model.DayOfWeek; i++)
    {
        emptyDaysStart += "<td class=\"empty\"></td>";
        j++;
    }
    j = 7 - ((j + Model.NumOfDays) % 7);
    for (int x = 0; x < j; x++)
    {
        emptyDaysEnd += "<td class=\"empty\"></td>";
    }
    int nextMonth = Model.Month == 12 ? 1 : Model.Month + 1;
    int nextYear = Model.Month == 12 ? Model.Year + 1 : Model.Year;
    int prevMonth = Model.Month == 1 ? 12 : Model.Month - 1;
    int prevYear = Model.Month == 1 ? Model.Year - 1 : Model.Year;
}
@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-customers.png")" alt="" />
            @T("rel.openEventsList")
        </div>
        @*<div class="options">
            <a href="@Url.Action("Create")" class="t-button">@T("Admin.Common.AddNew")</a>
        </div>*@
    </div>@*
    <table width="100%">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchDateMonth):
            </td>
            <td class="adminData">
                @{
    var monthValues = new List<SelectListItem>();
    monthValues.Add(new SelectListItem() { Text = T("Admin.Customers.Customers.List.SearchDateOfBirth.Month").Text, Value = "0" });
    for (int i = 1; i <= 12; i++)
    {
        monthValues.Add(new SelectListItem() { Text = i.ToString(CultureInfo.InvariantCulture), Value = i.ToString(CultureInfo.InvariantCulture) });
    }
    var dayValues = new List<SelectListItem>();
    dayValues.Add(new SelectListItem() { Text = T("Admin.Customers.Customers.List.SearchDateOfBirth.Day").Text, Value = "0" });
    for (int i = 1; i <= 31; i++)
    {
        dayValues.Add(new SelectListItem() { Text = i.ToString(CultureInfo.InvariantCulture), Value = i.ToString(CultureInfo.InvariantCulture) });
    }
    var yearValues = new List<SelectListItem>();
    yearValues.Add(new SelectListItem() { Text = T("Admin.Customers.Customers.List.SearchDateOfBirth.Year").Text, Value = "0" });
    for (int i = 1; i <= 12; i++)
    {
        dayValues.Add(new SelectListItem() { Text = i.ToString(CultureInfo.InvariantCulture), Value = i.ToString(CultureInfo.InvariantCulture) });
    }
                    }
                    @Html.DropDownListFor(model => Model.SearchDateDay, dayValues)
                    @Html.DropDownListFor(model => Model.SearchDateMonth, monthValues)                    
                    @Html.DropDownListFor(model => Model.SearchDateYear, yearValues)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchFromDateMonth):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => Model.SearchFromDateDay, dayValues)
                @Html.DropDownListFor(model => Model.SearchFromDateMonth, monthValues)
                @Html.DropDownListFor(model => Model.SearchFromDateYear, yearValues)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchToDateMonth):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => Model.SearchToDateDay, dayValues)
                @Html.DropDownListFor(model => Model.SearchToDateMonth, monthValues)
                @Html.DropDownListFor(model => Model.SearchToDateYear, yearValues)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchMonthNext):
            </td>
            <td class="adminData">
                @{
                    var monthNextValues = new List<SelectListItem>();
                    monthNextValues.Add(new SelectListItem() { Text = T("Admin.Customers.Customers.List.SearchDateOfBirth.Month").Text, Value = "0" });
                    for (int i = 1; i <= 12; i++)
                    {
                        monthNextValues.Add(new SelectListItem() { Text = i.ToString(CultureInfo.InvariantCulture), Value = i.ToString(CultureInfo.InvariantCulture) });
                    }           
                }
                @Html.DropDownListFor(model => Model.SearchMonthNext, monthNextValues)                    
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchMonthPast):
            </td>
            <td class="adminData">
                @{
                    var monthPastValues = new List<SelectListItem>();
                    monthPastValues.Add(new SelectListItem() { Text = T("Admin.Customers.Customers.List.SearchDateOfBirth.Month").Text, Value = "0" });
                    for (int i = 1; i <= 12; i++)
                    {
                        monthPastValues.Add(new SelectListItem() { Text = i.ToString(CultureInfo.InvariantCulture), Value = i.ToString(CultureInfo.InvariantCulture) });
                    }           
                }
                @Html.DropDownListFor(model => Model.SearchMonthPast, monthPastValues)                    
            </td>
        </tr>        
        <tr>
            <td colspan="2">
                <input type="button" id="search-open-events" class="t-button" value="@T("Admin.Common.Search")" />
            </td>
        </tr>
    </table>*@
    @*<p>
    </p>
    <table class="calander">
    <thead class="button-3">
        <tr>
            <th>@T("sunday")</th>
            <th>@T("monday")</th>
            <th>@T("tuesday")</th>
            <th>@T("wednesday")</th>
            <th>@T("thursday")</th>
            <th>@T("friday")</th>
            <th>@T("saturday")</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            @Html.Raw(emptyDaysStart)
            
            @foreach (var oem in Model.MonthDays)
            {
                <td class="@(oem.HasOpenEvents ? "events" : "no-events") @(oem.HasBookedOpenEvents ? " booked-open-events" : null)" data-id="">
                    <a href="@Url.Action("Create", new { year = oem.Year, month = oem.Month, day = day })" class="a-day">@T("create") - @(day)</a> 
                    @(oem.HasOpenEvents ? "<a href='" + Url.Action("EditOpenEvent", new { year = Model.Year, month = Model.Month, day = day }) + " class='a-day-edit'>" + T("create").ToString() + " - " + day.ToString() + "</a>" : null)*@
                    @*@{var firstOE = oem.OpenEvents.FirstOrDefault();
                      if (firstOE != null)
                      { 
                          var hour = 8;
                          while (firstOE.StartsAtHour < hour)
                          { 
                            <span>@(hour < 10 ? "0" + hour + ":00" : hour + ":00")</span>
                              hour++;
                          }
                      }
                          }                    
                    @foreach (var oe in oem.OpenEvents)
                    {
                        <span>Starts At @oe.StartsAt</span>
                        for (var sess = 1; sess <= oe.NumberOfSessions; sess++)
                        {
                            <span>@(oe.MySessions.Contains(sess) ? "MySession" : "NotMySession")</span>
                        }
                    }*@
                @*</td>  
                @(day++)
            }

            @Html.Raw(emptyDaysEnd)
        </tr>
    </tbody>
</table>*@
    
    <div class="events-header">
    <a href="@Url.Action("List", new { year = prevYear, month = prevMonth })"><</a>
    <span class="month">@Model.MonthName</span>
    <span class="year">@Model.Year</span>
    <a href="@Url.Action("List", new { year = nextYear, month = nextMonth })">></a>
</div>
<table class="calander">
    <thead class="button-3">
        <tr>
            <th>@T("sunday")</th>
            <th>@T("monday")</th>
            <th>@T("tuesday")</th>
            <th>@T("wednesday")</th>
            <th>@T("thursday")</th>
            <th>@T("friday")</th>
            <th>@T("saturday")</th>
        </tr>
    </thead>
    <tbody>
        <tr id="events">
            @Html.Action("MonthEvents", new { year = Model.Year, month = Model.Month })
            @*@Html.Raw(emptyDaysStart)

            @foreach (var oem in Model.MonthDays)
            {
                <td class="no-events" data-id="@day">@(day)*@    @*@(oem.OpenEvents.Count > 0 ? "events" : "no-events") *@                
                   
               @* </td>  
                @(day++)
            }
            @Html.Raw(emptyDaysEnd)*@
        </tr>
    </tbody>
</table>
<div class="indicators">
    <div class="available"><span></span>@T("available")</div>
    <div class="not-available"><span></span>@T("notavailable")</div>
    <div class="your-event"><span></span>@T("yourevent")</div>
</div>
    
<script type="text/javascript">
    @*$(document).ready(function () {
        //$('td.full').click(function () {
        //    $(".open-event").css('display', 'none');
        //    var id = $(this).attr('data-id');
        //    $('#open-event-' + id).css('display', 'block');
        //});
        //$(".open-event").draggable();
        $.get('@Html.Action("MonthEvents", new { year = Model.Year, month = Model.Month })', function (data) {
            $("#events").html(data);
        });
    });*@
    function goToMonth(month, year) {
        if (month < 1) {
            month = 12;
            year = year - 1;
        }
        if (month > 12) {
            month = 1;
            year = year + 1;
        }

    }
</script> 
    
    <style>
        /*events*/
.calander {
        width: 740px;
    }
    .calander td {
        width: 102px;
        height: 80px;
        display:inline-block;
        float:left;
        background-color:#ffffff;
        border:1px solid #000000;
        /* margin:5px; */
    
        border-right: none;
}
    .calander th {
        width: 93px;
        /* height: 30px; */
        display:inline-block;
        /* float:left; */
        /* background-color:#fff333; */
        border:1px solid #000000;
        padding: 10px 5px;
    
        border-right: none;
}
    td.empty {
        background-color: #D1D3D4;
    }
    td.full {
        background-color:#0094ff;
    }
    .open-event {
        /*display:none;
        position:absolute;
        top:100px;
        right:100px;
        width: 500px;
        height:500px;
        border:1px solid #000000;
        background-color:#ffffff;
        z-index:999999;*/
        width:400px;
    }
        .open-event span {
            clear:both;
            float:left;
        }
    </style>
    <script type="text/javascript">
        
        @*$(document).ready(function () {

            //search button
            $('#search-open-events').click(function () {
                var grid = $('#open-event-grid').data('tGrid');
                grid.currentPage = 1; //new search. Set page size to 1
                grid.ajaxRequest();
                return false;
            });

            

            $('#mastercheckbox').click(function () {
                $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
            });

        });


        function onDataBinding(e) {
            var searchModel = {
                SearchDateMonth: $('#@Html.FieldIdFor(model => model.SearchDateMonth)').val(),
                SearchDateDay: $('#@Html.FieldIdFor(model => model.SearchDateDay)').val(),
                SearchFromDateMonth: $('#@Html.FieldIdFor(model => model.SearchFromDateMonth)').val(),
                SearchFromDateDay: $('#@Html.FieldIdFor(model => model.SearchFromDateDay)').val(),
                SearchToDateMonth: $('#@Html.FieldIdFor(model => model.SearchToDateMonth)').val(),
                SearchToDateDay: $('#@Html.FieldIdFor(model => model.SearchToDateDay)').val(),
                SearchMonthNext: $('#@Html.FieldIdFor(model => model.SearchMonthNext)').val(),
                SearchMonthPast: $('#@Html.FieldIdFor(model => model.SearchMonthPast)').val()
            };
            e.data = searchModel;
        }*@
        @*function additionalData() {
            var customerRoleIds = [];
            $('[name=SearchCustomerRoleIds]:checked').each(function () {
                customerRoleIds.push($(this).val());
            });

            return {
                SearchCustomerRoleIds: customerRoleIds.join(","),
                SearchEmail: $('#@Html.FieldIdFor(model => model.SearchEmail)').val(),
                            SearchUsername: $('#@Html.FieldIdFor(model => model.SearchUsername)').val(),
                            SearchFirstName: $('#@Html.FieldIdFor(model => model.SearchFirstName)').val(),
                            SearchLastName: $('#@Html.FieldIdFor(model => model.SearchLastName)').val(),
                            SearchDayOfBirth: $('#@Html.FieldIdFor(model => model.SearchDayOfBirth)').val(),
                            SearchMonthOfBirth: $('#@Html.FieldIdFor(model => model.SearchMonthOfBirth)').val(),
                            SearchCompany: $('#@Html.FieldIdFor(model => model.SearchCompany)').val(),
                            SearchPhone: $('#@Html.FieldIdFor(model => model.SearchPhone)').val(),
                            SearchZipPostalCode: $('#@Html.FieldIdFor(model => model.SearchZipPostalCode)').val()
                        };
                    }*@
    </script>
}