@model ProductListModel

@using Nop.Core.Domain.Catalog

@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.Catalog.Products").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Products");
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.Catalog.Products")
        </h1>
        <div class="pull-right">
            <a href="@Url.Action("Create")" class="btn bg-blue">
                <i class="fa fa-plus-square"></i>
                @T("Admin.Common.AddNew")
            </a>
            <button type="submit" name="download-catalog-pdf" class="btn bg-purple">
                <i class="fa fa-file-pdf-o"></i>
                @T("Admin.Catalog.Products.List.DownloadPDF")
            </button>
            <div class="btn-group">
                <button type="button" class="btn btn-success">
                    <i class="fa fa-download"></i>
                    @T("Admin.Common.Export")
                </button>
                <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                    <span class="caret"></span>
                    <span class="sr-only">&nbsp;</span>
                </button>
                <ul class="dropdown-menu" role="menu">
                    <li>
                        <button type="submit" name="exportxml-all">
                            <i class="fa fa-file-code-o"></i>
                            @T("Admin.Common.ExportToXml.All")
                        </button>
                    </li>
                    <li>
                        <button type="button" id="exportxml-selected">
                            <i class="fa fa-file-code-o"></i>
                            @T("Admin.Common.ExportToXml.Selected")
                        </button>
                    </li>
                    <li class="divider"></li>
                    <li>
                        <button type="submit" name="exportexcel-all">
                            <i class="fa fa-file-excel-o"></i>
                            @T("Admin.Common.ExportToExcel.All")
                        </button>
                    </li>
                    <li>
                        <button type="button" id="exportexcel-selected">
                            <i class="fa fa-file-excel-o"></i>
                            @T("Admin.Common.ExportToExcel.Selected")
                        </button>
                    </li>
                </ul>
            </div>
            @*rel*@
            <div class="btn-group">
                <button type="button" class="btn btn-success">
                    <i class="fa fa-download"></i>
                    @T("ya.Export")
                </button>
                <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                    <span class="caret"></span>
                    <span class="sr-only">&nbsp;</span>
                </button>
                <ul class="dropdown-menu" role="menu">
                    <li>
                        <button type="submit" name="rel-exportexcel-all">
                            <i class="fa fa-file-excel-o"></i>
                            @T("ya.ExportToExcel.All")
                        </button>
                    </li>
                    <li>
                        <button type="button" id="rel-exportexcel-selected">
                            <i class="fa fa-file-excel-o"></i>
                            @T("ya.ExportToExcel.Selected")
                        </button>
                    </li>
                </ul>
            </div>
            @if (!Model.IsLoggedInAsVendor)
            {
                //a vendor cannot import products
                <button type="button" name="importexcel" class="btn bg-olive" data-toggle="modal" data-target="#importexcel-window">
                    <i class="fa fa-upload"></i>
                    @T("Admin.Common.Import")
                </button>
                <button type="button" name="rel-importexcel" class="btn bg-olive" data-toggle="modal" data-target="#rel-importexcel-window">
                    <i class="fa fa-upload"></i>
                    @T("ya.ImportREL")
                </button>
                @*returns full error message*@
                <button style="display:none;" type="button" name="rel-importexcel-test" class="btn bg-olive" data-toggle="modal" data-target="#rel-importexcel-window-test">
                    <i class="fa fa-upload"></i>
                    @T("ya.ImportREL.test")
                </button>
            }
            <button type="button" id="delete-selected" class="btn bg-red">
                <i class="fa fa-trash-o"></i>
                @T("Admin.Common.Delete.Selected")
            </button>
            <span id="undo" class="k-button hide-on-narrow">@T("ya.excesstructureexplenation")</span>
            @*<button type="button" id="excel-explain" class="btn bg-gray" data-target="#excel-explain-window">
                <i class="fa fa-trash-o"></i>
                @T("ya.excesstructureexplenation")
            </button>*@
        </div>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchProductName)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopEditorFor(model => model.SearchProductName)
                                    </div>
                                </div>
                                <div class="form-group" @(Model.AvailableCategories.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchCategoryId)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopDropDownList("SearchCategoryId", Model.AvailableCategories)
                                    </div>
                                </div>
                                <div class="form-group" @(Model.AvailableCategories.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchIncludeSubCategories)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopEditorFor(model => model.SearchIncludeSubCategories)
                                    </div>
                                </div>
                                <div class="form-group" @(Model.AvailableManufacturers.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchManufacturerId)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopDropDownList("SearchManufacturerId", Model.AvailableManufacturers)
                                    </div>
                                </div>
                                <div class="form-group" @(Model.AvailableVendors.SelectionIsNotPossible() || Model.IsLoggedInAsVendor ? Html.Raw("style='display: none;'") : null)>
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchVendorId)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopDropDownList("SearchVendorId", Model.AvailableVendors)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="form-group" @(Model.AvailableStores.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchStoreId)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopDropDownList("SearchStoreId", Model.AvailableStores)
                                    </div>
                                </div>
                                <div class="form-group" @(Model.AvailableWarehouses.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchWarehouseId)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopDropDownList("SearchWarehouseId", Model.AvailableWarehouses)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchProductTypeId)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopDropDownList("SearchProductTypeId", Model.AvailableProductTypes)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchPublishedId)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopDropDownList("SearchPublishedId", Model.AvailablePublishedOptions)
                                    </div>
                                </div>
                                @*REL*@
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.VisibleIndividuallyOnly)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopDropDownList("VisibleIndividuallyOnly", Model.AvailableVisibleIndividuallyOnlyOptions)
                                    </div>
                                </div>
                                @*END-REL*@
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.GoDirectlyToSku)
                                    </div>
                                    <div class="col-md-8">
                                        <div class="input-group input-group-short">
                                            @Html.NopEditorFor(model => model.GoDirectlyToSku)
                                            <span class="input-group-btn">
                                                <button type="submit" id="go-to-product-by-sku" name="go-to-product-by-sku" class="btn btn-info btn-flat">
                                                    @T("Admin.Common.Go")
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-7 col-md-offset-5">
                                <button type="button" id="search-products" class="btn btn-primary btn-search">
                                    <i class="fa fa-search"></i>
                                    @T("Admin.Common.Search")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-body">
                        <div id="products-grid"></div>

                        <script>
                            $(document).ready(function() {
                                $("#products-grid").kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("ProductList", "Product"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: additionalData
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors"
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        pageSize: @(defaultGridPageSize),
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    pageable: {
                                        refresh: true,
                                        pageSizes: [@(gridPageSizes)]
                                    },
                                    editable: {
                                        confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                        mode: "inline"
                                    },
                                    scrollable: false,
                                    dataBound: onDataBound,
                                    columns: [
                                        {
                                            field: "Id",
                                            headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                                            headerAttributes: { style: "text-align:center" },
                                            attributes: { style: "text-align:center" },
                                            template: "<input type='checkbox' value='#=Id#' class='checkboxGroups'/>",
                                            width: 50
                                        },
                                        {
                                            field: "PictureThumbnailUrl",
                                            title: "@T("Admin.Catalog.Products.Fields.PictureThumbnailUrl")",
                                            template: '<img src="#=PictureThumbnailUrl#" />',
                                            width: 100
                                        },
                                        {
                                            field: "Name",
                                            title: "@T("Admin.Catalog.Products.Fields.Name")",
                                            width: 300
                                        }, {
                                            field: "Sku",
                                            title: "@T("Admin.Catalog.Products.Fields.Sku")",
                                            width: 100
                                        }, {
                                            field: "Price",
                                            title: "@T("Admin.Catalog.Products.Fields.Price")",
                                            width: 150,
                                            //if not a grouped product, then display
                                            template: "# if(ProductTypeId != @((int) ProductType.GroupedProduct)) {# #:Price# #}  #"
                                        }, {
                                            field: "StockQuantityStr",
                                            title: "@T("Admin.Catalog.Products.Fields.StockQuantity")",
                                            width: 100
                                        }, {
                                            field: "ProductTypeName",
                                            title: "@T("Admin.Catalog.Products.Fields.ProductType")",
                                            width: 100
                                        }, {
                                            field: "Published",
                                            title: "@T("Admin.Catalog.Products.Fields.Published")",
                                            width: 100,
                                            template: '# if(Published) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                                        }, {
                                            field: "Id",
                                            title: "@T("Admin.Common.Edit")",
                                            width: 100,
                                            template: '<a href="Edit/#=Id#">@T("Admin.Common.Edit")</a>'
                                        }
                                    ]
                                });
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        var selectedIds = [];

        $(document).ready(function () {
            //search button
            $('#search-products').click(function () {
                //search
                var grid = $('#products-grid').data('kendoGrid');
                grid.dataSource.page(1); //new search. Set page size to 1
                //grid.dataSource.read(); we already loaded the grid above using "page" function
                //clear selected checkboxes
                $('.checkboxGroups').attr('checked', false).change();
                selectedIds = [];
                return false;
            });

            $("#@Html.FieldIdFor(model => model.SearchProductName)").keydown(function (event) {
                if (event.keyCode === 13) {
                    $("#search-products").click();
                    return false;
                }
            });

            $("#@Html.FieldIdFor(model => model.GoDirectlyToSku)").keydown(function (event) {
                if (event.keyCode === 13) {
                    $("#go-to-product-by-sku").click();
                    return false;
                }
            });
            //delete selected
            $('#delete-selected').click(function(e) {
                e.preventDefault();

                var postData = {
                    selectedIds: selectedIds
                };
                addAntiForgeryToken(postData);

                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("DeleteSelected", "Product"))",
                    data: postData,
                    complete: function(data) {
                        //reload grid
                        var grid = $('#products-grid').data('kendoGrid');
                        grid.dataSource.read();
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        alert(thrownError);
                    },
                    traditional: true
                });
                return false;
            });

            $('#mastercheckbox').click(function () {
                $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
            });

            //wire up checkboxes.
            $('#products-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
                var $check = $(this);
                if ($check.is(":checked") == true) {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked == -1) {
                        //add id to selectedIds.
                        selectedIds.push($check.val());
                    }
                }
                else {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked > -1) {
                        //remove id from selectedIds.
                        selectedIds = $.grep(selectedIds, function (item, index) {
                            return item != $check.val();
                        });
                    }
                }
                updateMasterCheckbox();
            });
        });

        function additionalData() {
            var data = {
                SearchProductName: $('#@Html.FieldIdFor(model => model.SearchProductName)').val(),
                SearchCategoryId: $('#SearchCategoryId').val(),
                SearchIncludeSubCategories: $('#@Html.FieldIdFor(model => model.SearchIncludeSubCategories)').is(':checked'),
                SearchManufacturerId: $('#SearchManufacturerId').val(),
                SearchStoreId: $('#SearchStoreId').val(),
                SearchWarehouseId: $('#SearchWarehouseId').val(),
                SearchVendorId: $('#SearchVendorId').val(),
                SearchProductTypeId: $('#SearchProductTypeId').val(),
                SearchPublishedId: $('#SearchPublishedId').val(),
                VisibleIndividuallyOnly: $('#VisibleIndividuallyOnly').val()
            };
            addAntiForgeryToken(data);
            return data;
        }

        function onDataBound(e) {
            $('#products-grid input[type=checkbox][id!=mastercheckbox]').each(function () {
                var currentId = $(this).val();
                var checked = jQuery.inArray(currentId, selectedIds);
                //set checked based on if current checkbox's value is in selectedIds.
                $(this).attr('checked', checked > -1);
            });

            updateMasterCheckbox();
        }

        function updateMasterCheckbox() {
            var numChkBoxes = $('#products-grid input[type=checkbox][id!=mastercheckbox]').length;
            var numChkBoxesChecked = $('#products-grid input[type=checkbox][id!=mastercheckbox]:checked').length;
            $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
        }
    </script>
}

@*import products form*@
<div id="importexcel-window" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="importexcel-window-title">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="importexcel-window-title">@T("Admin.Common.ImportFromExcel")</h4>
            </div>
            @using (Html.BeginForm("ImportExcel", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal">
                    <div class="modal-body">
                        @Html.AntiForgeryToken()
                        <ul class="common-list">
                            <li>
                                <em>@T("Admin.Catalog.Products.List.ImportFromExcelTip")</em>
                            </li>
                            <li>
                                <em>@T("Admin.Common.ImportFromExcel.ManyRecordsWarning")</em>
                            </li>
                        </ul>
                        <div class="form-group">
                            <div class="col-md-2">
                                <div class="label-wrapper">
                                    <label class="control-label">
                                        @T("Admin.Common.ExcelFile")
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-10">
                                <input type="file" id="importexcelfile" name="importexcelfile" class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">
                            @T("Admin.Common.ImportFromExcel")
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@*import products form REL*@
<div id="rel-importexcel-window" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="rel-importexcel-window-title">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="rel-importexcel-window-title">@T("Admin.Common.ImportFromExcel")</h4>
            </div>
            @using (Html.BeginForm("REL_ImportExcel", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal">
                    <div class="modal-body">
                        @Html.AntiForgeryToken()
                        <ul class="common-list">
                            <li>
                                <em>@T("Admin.Catalog.Products.List.ImportFromExcelTip")</em>
                            </li>
                            <li>
                                <em>@T("Admin.Common.ImportFromExcel.ManyRecordsWarning")</em>
                            </li>
                        </ul>
                        <div class="form-group">
                            <div class="col-md-2">
                                <div class="label-wrapper">
                                    <label class="control-label">
                                        @T("Admin.Common.ExcelFile")
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-10">
                                <input type="file" id="rel-importexcelfile" name="rel-importexcelfile" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-2">
                                <div class="label-wrapper">
                                    <label class="control-label">
                                        @T("Admin.ya.baseimagefolderpath")
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-10">
                                <input type="text" id="rel-base-image-folder-path" name="rel-base-image-folder-path" class="form-control" />
                            </div>
                        </div>
                        <span>@T("Admin.ya.baseimagefolderpath.hint")</span>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">
                            @T("Admin.Common.ImportFromExcel")
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@*import products form REL - test, with error message*@
<div id="rel-importexcel-window-test" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="rel-importexcel-window-title-test">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="rel-importexcel-window-title-test">@T("Admin.Common.ImportFromExcel")</h4>
            </div>
            @using (Html.BeginForm("REL_ImportExcel_Test", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal">
                    <div class="modal-body">
                        @Html.AntiForgeryToken()
                        <ul class="common-list">
                            <li>
                                <em>@T("Admin.Catalog.Products.List.ImportFromExcelTip")</em>
                            </li>
                            <li>
                                <em>@T("Admin.Common.ImportFromExcel.ManyRecordsWarning")</em>
                            </li>
                        </ul>
                        <div class="form-group">
                            <div class="col-md-2">
                                <div class="label-wrapper">
                                    <label class="control-label">
                                        @T("Admin.Common.ExcelFile")
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-10">
                                <input type="file" id="rel-importexcelfile-test" name="rel-importexcelfile-test" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-2">
                                <div class="label-wrapper">
                                    <label class="control-label">
                                        @T("Admin.ya.baseimagefolderpath")
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-10">
                                <input type="text" id="rel-base-image-folder-path-test" name="rel-base-image-folder-path-test" class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">
                            @T("Admin.Common.ImportFromExcel")
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@*rel - excel structure explenation*@
<div id="excel-explain-window"> @*class="modal fade excel-explain-window hidenow" tabindex="-1" role="dialog" aria-labelledby="excel-explain-window-title"*@
    <div> @*class="modal-dialog"*@
        <div> @*class="modal-content"*@
            @*<div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="excel-explain-window-close">@T("ya.closewindow")</h4>
            </div>*@
            <div class="k-grid k-widget">
                <table role="grid">
                    @*<colgroup>
                        <col style="width:100px"><col style="width:100px">
                        <col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px">
                        <col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px">
                        <col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px">
                    </colgroup>*@
                <thead class="k-grid-header" role="rowgroup">
                    <tr role="row">
                        <th role="columnheader" style="text-align:center" class="k-header attr">
                            (empty columne)
                        </th>
                        <th role="columnheader" style="text-align:center" class="k-header attr">
                            (empty columne)
                        </th>
                        <th role="columnheader" style="text-align:center" class="k-header attr">
                            AttributeId
                        </th>
                        <th role="columnheader" style="text-align:center" class="k-header attr">
                            AttributeName
                        </th>
                        <th role="columnheader" style="text-align:center" class="k-header attr">
                            HasCondition
                        </th>
                        <th role="columnheader" style="text-align:center" class="k-header attr">
                            RowValueIdForCondition
                        </th>
                        <th role="columnheader" style="text-align:center" class="k-header attr">
                            RowValueIsSelected
                        </th>
                        <th role="columnheader" style="text-align:center" class="k-header attr">
                            RowValueId
                        </th>
                        <th role="columnheader" style="text-align:center" class="k-header attr">
                            AttributeTextPrompt
                        </th>
                        <th role="columnheader" style="text-align:center" class="k-header attr">
                            IsStoneAttribute
                        </th>
                        <th role="columnheader" style="text-align:center" class="k-header attr">
                            AttributeIsRequired
                        </th>
                        <th role="columnheader" style="text-align:center" class="k-header attr">
                            AttributeControlType
                        </th>
                        <th role="columnheader" style="text-align:center" class="k-header attr">
                            AttributeDisplayOrder
                        </th>
                        <th role="columnheader" style="text-align:center" class="k-header">
                            ProductAttributeValueId
                        </th>
                        <th role="columnheader" style="text-align:center" class="k-header">
                            ValueName
                        </th>
                        <th role="columnheader" style="text-align:center" class="k-header">
                            AttributeValueType
                        </th>
                        <th role="columnheader" style="text-align:center" class="k-header">
                            AssociatedProductId
                        </th>
                        <th role="columnheader" style="text-align:center" class="k-header">
                            Quantity
                        </th>
                        <th role="columnheader" style="text-align:center" class="k-header">
                            ColorSquaresRgb
                        </th>
                        <th role="columnheader" style="text-align:center" class="k-header">
                            ImageSquaresPictureId
                        </th>        
                        <th role="columnheader" style="text-align:center" class="k-header">
                            PriceAdjustment
                        </th>        
                        <th role="columnheader" style="text-align:center" class="k-header">
                            WeightAdjustment
                        </th>        
                        <th role="columnheader" style="text-align:center" class="k-header">
                            Cost
                        </th>        
                        <th role="columnheader" style="text-align:center" class="k-header">
                            ZIndex
                        </th>
                        @*<th role="columnheader" style="text-align:center" class="k-header">
                            IsStoneProductAttributeValue
                        </th>*@  
                        <th role="columnheader" style="text-align:center" class="k-header">
                            IsPreSelected
                        </th>  
                        <th role="columnheader" style="text-align:center" class="k-header">
                            DisplayOrder
                        </th>  
                        <th role="columnheader" style="text-align:center" class="k-header">
                            PictureId
                        </th>  
                        <th role="columnheader" style="text-align:center" class="k-header">
                            SKUCode
                        </th>  
                        <th role="columnheader" style="text-align:center" class="k-header">
                            StoneNameId
                        </th>  
                        <th role="columnheader" style="text-align:center" class="k-header">
                            BigPicture
                        </th>  
                        <th role="columnheader" style="text-align:center" class="k-header">
                            SmallPicture
                        </th>                                                                                             
                    </tr>
                    </thead>
                <tbody role="rowgroup">
                    <tr role="row">
                        <td class="text-aligen-center" role="gridcell"></td>
                        <td class="text-aligen-center" role="gridcell"></td>
                        <td class="text-aligen-center attr red" role="gridcell">Number (Int), has to be generated by the system</td>
                        <td class="text-aligen-center attr" role="gridcell">Text</td>
                        <td class="text-aligen-center attr red" role="gridcell">True/False. If true - it means that this (source) attribute visibility deppends on anothr (destination) attribute, the one "RowValueIdForCondition" is pointing to.</td>
                        <td class="text-aligen-center attr" role="gridcell">Number (Int), points to the "RowValueId" column (the destination Id), connects a condition between these two attributes.</td>
                        <td class="text-aligen-center attr" role="gridcell">True/False. If true - then only when the destination attribute is selected, this (source) attribute will apear.</td>
                        <td class="text-aligen-center attr" role="gridcell">Number (Int). The destination Id for conditions.</td>
                        <td class="text-aligen-center attr" role="gridcell">Text. The title for this attribute.</td>
                        <td class="text-aligen-center attr" role="gridcell">True/False. If true - this attribute contains stones, and needs to be in sync with all other stone properties.</td>
                        <td class="text-aligen-center attr" role="gridcell">True/False. If true - customer can't purchase this item without sellecting a value from this attribute.</td>
                        <td class="text-aligen-center attr" role="gridcell">GENERATED BY THE SYSTEM</td>
                        <td class="text-aligen-center attr" role="gridcell">Number (Int). The order in which attributes apear.</td>
                        <td class="text-aligen-center" role="gridcell">Number (Int). The Id of the attributes value.</td>
                        <td class="text-aligen-center" role="gridcell">Text. The name of the value.</td>
                        <td class="text-aligen-center" role="gridcell">GENERATED BY THE SYSTEM</td>
                        <td class="text-aligen-center" role="gridcell">Number (Int). If this attribute value is a product on the system (like most of the values), this is the systems Id for this (product) value. Else, this is '0'.</td>
                        <td class="text-aligen-center" role="gridcell">Number (Int). How many pieces of this alue are added? (if each earring has 3 stones - then the quantity will be 6).</td>
                        <td class="text-aligen-center" role="gridcell">Text. If this a "Color Square", the RGB values go here (#657687).</td>
                        <td class="text-aligen-center" role="gridcell">Number (Int). If this an "Image Square", the Id of the picture goes here.</td>
                        <td class="text-aligen-center" role="gridcell">Decimal (If associated to product - doesn't apply)</td>
                        <td class="text-aligen-center" role="gridcell">Decimal (If associated to product - doesn't apply)</td>
                        <td class="text-aligen-center" role="gridcell">Decimal (If associated to product - doesn't apply)</td>
                        <td class="text-aligen-center" role="gridcell">Number (Int). Default should be '10', this is the index of this values picture on the display.</td>
                        <td class="text-aligen-center" role="gridcell">True/False. If true - this attribute contains stones, and needs to be in sync with all other stone properties.</td>
                        <td class="text-aligen-center" role="gridcell">True/False. If true - when page first loads, this value will be selected.</td>
                        <td class="text-aligen-center" role="gridcell">Number (Int). The order of the values in this attribute.</td>
                        <td class="text-aligen-center" role="gridcell">Number (Int). The products picture Id.</td>
                        <td class="text-aligen-center" role="gridcell">Text. The SKU code for this value.</td>
                        <td class="text-aligen-center" role="gridcell">Text. If this is a stone attribute, each value should have a uniq Id (AMY, COR,GAR...)</td>
                        <td class="text-aligen-center" role="gridcell">Text. The name of the "Big picture", the one that shows up on the product display.</td>
                        <td class="text-aligen-center" role="gridcell">Text. The name of the "Small picture", the one that shows up on the clickable button.</td>
                    </tr>
                    </tbody>
                </table>
            </div>
        @*pictures definition*@
            <div class="k-grid k-widget">
                <h3>Different Pictures:</h3>
                <table role="grid">
                    @*<colgroup>
                    <col style="width:100px"><col style="width:100px">
                    <col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px">
                    <col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px">
                    <col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px"><col style="width:190px">
                </colgroup>*@
                    <thead class="k-grid-header" role="rowgroup">
                        <tr role="row">
                            <th role="columnheader" style="text-align:center" class="k-header attr">
                                (Main Product Section) Picture1
                            </th>
                            <th role="columnheader" style="text-align:center" class="k-header attr">
                                (Main Product Section) Picture2
                            </th>
                            <th role="columnheader" style="text-align:center" class="k-header attr">
                                (Main Product Section) Picture3
                            </th>
                            <th role="columnheader" style="text-align:center" class="k-header attr">
                                (Attribute Section) BigPicture
                            </th>
                            <th role="columnheader" style="text-align:center" class="k-header attr">
                                (Attribute Section) SmallPicture
                            </th>
                        </tr>
                    </thead>
                    <tbody role="rowgroup">
                        <tr role="row">
                            <td class="text-aligen-center" role="gridcell">The main picture that is shown on the category product list page.</td>
                            <td class="text-aligen-center" role="gridcell">The picture that is shown on the product page, and all the other pictures are stacked on top on it.</td>
                            <td class="text-aligen-center" role="gridcell">A picture with only one product on it, and when a customer clicks on it, the product is returned to the default state.</td>
                            <td class="text-aligen-center" role="gridcell">The attribute value picture that is stacked on the product picuture (Picture2).</td>
                            <td class="text-aligen-center" role="gridcell">The attribute value picture that the customer clicks on, the small squere/round button picture.</td>
                        </tr>
                        <tr role="row">
                            <td class="text-aligen-center" role="gridcell">Preffered type is '.jpg', but can be allso '.png'</td>
                            <td class="text-aligen-center red" role="gridcell">Has to be '.png' with transparend background.</td>
                            <td class="text-aligen-center" role="gridcell">Preffered type is '.jpg', but can be allso '.png'</td>
                            <td class="text-aligen-center red" role="gridcell">Has to be '.png' with transparend background.</td>
                            <td class="text-aligen-center" role="gridcell">Preffered type is '.jpg', but can be allso '.png'</td>                            
                        </tr>
                        <tr role="row">
                            <td class="text-aligen-center" role="gridcell">Size: 700px / 700px</td>
                            <td class="text-aligen-center" role="gridcell">Size: 700px / 700px</td>
                            <td class="text-aligen-center" role="gridcell">Size: 150px / 150px</td>
                            <td class="text-aligen-center" role="gridcell">Size: 700px / 700px</td>
                            <td class="text-aligen-center" role="gridcell">Size: 50px / 50px</td>
                        </tr>
                        <tr role="row" class="demo-images">
                            <td class="text-aligen-center" role="gridcell"><img src="~/Administration/Content/DemoPictures/E015.jpg" /></td>
                            <td class="text-aligen-center" role="gridcell"><img src="~/Administration/Content/DemoPictures/E015.png" /></td>
                            <td class="text-aligen-center" role="gridcell"><img src="~/Administration/Content/DemoPictures/E015single.jpg" /></td>
                            <td class="text-aligen-center" role="gridcell"><img src="~/Administration/Content/DemoPictures/E015K116.png" /></td>
                            <td class="text-aligen-center" role="gridcell"><img src="~/Administration/Content/DemoPictures/K116.jpg" /></td>
                        </tr>
                    </tbody>
                </table>
            </div>
            </div>
        </div>
    <span class="attr indicator">This color indicates that this is an attribute, and this part can be the same for all the lines of this attribute. For example, if an attribute has 4 values, all cels that belong to the same attribute will be the same, and all cels that belong to the attributes values will be different.</span>
    </div>


@*export selected (XML). We don't use GET approach because it's limited to 2K-4K chars and won't work for large number of entities*@
@using (Html.BeginForm("ExportXmlSelected", "Product", FormMethod.Post, new { id = "export-xml-selected-form" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="selectedIds" name="selectedIds" value="" />
}

<script type="text/javascript">
    $(document).ready(function () {
        $('#exportxml-selected').click(function (e) {
            e.preventDefault();
            var ids = selectedIds.join(",");
            $('#export-xml-selected-form #selectedIds').val(ids);
            $('#export-xml-selected-form').submit();
            return false;
        });
    });
</script>

@*export selected (Excel). We don't use GET approach because it's limited to 2K-4K chars and won't work for large number of entities*@
@using (Html.BeginForm("ExportExcelSelected", "Product", FormMethod.Post, new { id = "export-excel-selected-form" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="selectedIds" name="selectedIds" value="" />
}

@*rel*@
@*export selected (Excel). We don't use GET approach because it's limited to 2K-4K chars and won't work for large number of entities*@
@using (Html.BeginForm("REL_ExportExcelSelected", "Product", FormMethod.Post, new { id = "rel-export-excel-selected-form" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="selectedIds" name="selectedIds" value="" />
}

<script type="text/javascript">
    $(document).ready(function () {
        //rel
        var myWindow = $("#excel-explain-window"),
                        undo = $("#undo");

        undo.click(function() {
            myWindow.data("kendoWindow").open();
            undo.fadeOut();
        });

        function onClose() {
            undo.fadeIn();
        }

        myWindow.kendoWindow({
            width: "95%",
            height: "600px",
            title: "Product Attribute Excel Structure",
            visible: false,
            actions: [
                "Pin",
                "Minimize",
                "Maximize",
                "Close"
            ],
            close: onClose
        }).data("kendoWindow").center();
        //rel

        $('#exportexcel-selected').click(function (e) {
            e.preventDefault();
            var ids = selectedIds.join(",");
            $('#export-excel-selected-form #selectedIds').val(ids);
            $('#export-excel-selected-form').submit();
            return false;
        });
        $('#rel-exportexcel-selected').click(function (e) {
            e.preventDefault();
            var ids = selectedIds.join(",");
            $('#rel-export-excel-selected-form #selectedIds').val(ids);
            $('#rel-export-excel-selected-form').submit();
            return false;
        });
    });
</script>
<style>
    #excel-explain-window .k-grid table tr:hover > td.attr,
    #excel-explain-window td.attr, .attr.indicator {
        background-color:#D1D7FF!important; 
    }
    #excel-explain-window th.k-header.attr {
        background-color:#C6CEFF; 
    }
    .attr.indicator {
        width: 60%;
        display: block;
        margin: 20px auto;
        border: 1px red solid;
        padding: 10px;
    }
    table .text-aligen-center, table .k-header {
        width:190px!important;
    }
    .demo-images img {
        width: 200px!important;
        height: auto!important;
    }
    /*.excel-explain-window {
        position: absolute;
        z-index:999;
        display:block;
    }
    .excel-explain-window.hidenow {
        display:none;
    }*/
</style>